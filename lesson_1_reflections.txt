How did viewing a diff between two versions of a file help you see the bug that was introduced?
It makes it possible to compare the two codes and see clearly where the bug is.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It optimizes the work process, save me lots of time and enable experiments with no risks.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
By this way, I can control the size of the commit history and checkpoint whenever I have a logical change. The problem is that it’s kinda annoying keep saving stuff up all the time and I can occasionally forget doing so.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because Git handles code, and many times different files are substantially related. Google Docs has a different purpose.
How can you use the commands git log and git diff to view the history of files?
The git log command opens the history list of every commit made in the files. The git diff compares two commit looking for and pointing out the differences among them.
How might using version control make you more confident to make changes that could break something?
Making it possible to come back to an older version of the code if it’s broken somehow by the changes.
Now that you have your workspace set up, what do you want to try using Git for?
I want to use it for coding indeed.